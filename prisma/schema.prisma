// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(cuid())
  clerkId String @unique
  email String @unique
  firstName String?
  lastName String?
  phone String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Relationships
  appointments Appointment[]

  @@map("users")
}

model Doctor{
  id String @id @default(cuid())
  name String
  email String @unique
  phone String
  speciality String
  bio String?
  imageUrl String
  gender Gender
  isActive Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Relationships
  appointments Appointment[]

  @@map("doctors")
}

model Appointment{
  id String @id @default(cuid())
  date DateTime
  time String
  duration Int @default(30)
  status AppointementStatus @default(CONFIRMED)
  notes String?
  reason String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  //Foreign Key
  userId String
  doctorId String

  //relationships
  user User @relation(fields: [userId],references: [id],onDelete: Cascade)
  doctor Doctor @relation(fields: [doctorId],references: [id],onDelete: Cascade)

  @@map("appointment")
}

enum AppointementStatus{
  CONFIRMED
  COMPLETED
}

enum Gender{
  MALE
  FEMALE
}